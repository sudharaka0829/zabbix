For configuring HTTPS for Zabbix 7 running on RHEL 9 with Apache HTTPD, follow these steps:

1. Install Required Packages

Ensure the necessary modules are installed:

sudo dnf install httpd mod_ssl openssl -y

2. Obtain or Generate an SSL/TLS Certificate

Option A: Obtain a Certificate (Recommended for Production)

If you have a domain name pointing to your server, use Let’s Encrypt with Certbot:

sudo dnf install certbot python3-certbot-apache -y
sudo certbot --apache -d <your-domain-name>

This will automatically configure HTTPS for Apache.

Option B: Generate a Self-Signed Certificate (For Testing)

If you don’t have a domain name, create a self-signed certificate:

sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout /etc/pki/tls/private/zabbix.key \
    -out /etc/pki/tls/certs/zabbix.crt

	•	Key file: /etc/pki/tls/private/zabbix.key
	•	Certificate file: /etc/pki/tls/certs/zabbix.crt

3. Configure Apache for HTTPS

Edit or create a new Apache configuration file for Zabbix, such as /etc/httpd/conf.d/zabbix-ssl.conf:

<VirtualHost *:443>
    ServerAdmin admin@example.com
    DocumentRoot /usr/share/zabbix
    ServerName <YOUR_IP_OR_DOMAIN>

    SSLEngine on
    SSLCertificateFile /etc/pki/tls/certs/zabbix.crt
    SSLCertificateKeyFile /etc/pki/tls/private/zabbix.key

    <Directory "/usr/share/zabbix">
        Require all granted
    </Directory>

    ErrorLog /var/log/httpd/zabbix-ssl-error.log
    CustomLog /var/log/httpd/zabbix-ssl-access.log combined
</VirtualHost>

# Redirect HTTP to HTTPS
<VirtualHost *:80>
    ServerName <YOUR_IP_OR_DOMAIN>
    Redirect permanent / https://<YOUR_IP_OR_DOMAIN>/
</VirtualHost>

4. Adjust SELinux (If Enabled)

If SELinux is enforcing, allow HTTPD to use the SSL files:

sudo semanage fcontext -a -t httpd_sys_content_t "/etc/pki/tls/private/zabbix.key"
sudo semanage fcontext -a -t httpd_sys_content_t "/etc/pki/tls/certs/zabbix.crt"
sudo restorecon -Rv /etc/pki/tls/

5. Open Firewall Ports

Allow HTTPS (port 443) in the firewall:

sudo firewall-cmd --add-service=https --permanent
sudo firewall-cmd --reload

6. Restart Apache

Restart the Apache HTTPD service to apply changes:

sudo systemctl restart httpd

7. Verify HTTPS
	•	Open your browser and navigate to https://<your-IP> or https://<your-domain>.
	•	If you used a self-signed certificate, the browser may display a security warning. Accept it to proceed.

Let me know if you need further clarification!