#!/bin/bash

# File containing the snmpwalk output
SNMPWALK_FILE="device_snmp_oids.txt"

# Function to extract unique OIDs
extract_oids() {
  awk '/^([0-9]+\.[0-9.]+)/ {print $1}' "$SNMPWALK_FILE" | sort | uniq
}

# Function to print a sample of the snmpwalk output
print_sample() {
  echo "Sample SNMP walk data:"
  head -n 20 "$SNMPWALK_FILE"
}

# Check if the snmpwalk file exists
if [[ ! -f $SNMPWALK_FILE ]]; then
  echo "SNMP walk file not found: $SNMPWALK_FILE"
  exit 1
fi

# Extract and count unique OIDs
unique_oids=$(extract_oids)
num_oids=$(echo "$unique_oids" | wc -l)

# Output results
echo "Total unique OIDs found: $num_oids"
echo "$unique_oids"

# Print a sample of the snmpwalk output
print_sample
















#!/bin/bash

# Output file for the Zabbix template XML
OUTPUT_FILE="zabbix_snmp_template.xml"
TEMPLATE_NAME="Template_SNMP_Device"
TEMPLATE_GROUP="Templates"

# List of OIDs to monitor
OIDS=(
  "1.3.6.1.2.1.1.3.0"  # sysUpTimeInstance
  "1.3.6.1.2.1.2.2.1.10"  # ifInOctets
  "1.3.6.1.2.1.2.2.1.16"  # ifOutOctets
  # Add more OIDs as needed
)

# Create the XML header
cat <<EOF > "$OUTPUT_FILE"
<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>6.0</version>
    <date>$(date -Iseconds)</date>
    <groups>
        <group>
            <name>$TEMPLATE_GROUP</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>$TEMPLATE_NAME</template>
            <name>$TEMPLATE_NAME</name>
            <groups>
                <group>
                    <name>$TEMPLATE_GROUP</name>
                </group>
            </groups>
            <items>
EOF

# Add each OID as an item
for OID in "${OIDS[@]}"; do
  ITEM_KEY=$(echo "$OID" | tr -d '.')
  ITEM_NAME="Item_$ITEM_KEY"
  cat <<EOF >> "$OUTPUT_FILE"
                <item>
                    <name>$ITEM_NAME</name>
                    <type>SNMPv2 agent</type>
                    <snmp_oid>$OID</snmp_oid>
                    <key>$ITEM_NAME</key>
                    <value_type>3</value_type>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                </item>
EOF
done

# Close the XML tags
cat <<EOF >> "$OUTPUT_FILE"
            </items>
        </template>
    </templates>
</zabbix_export>
EOF

echo "Zabbix template XML generated: $OUTPUT_FILE"
