short interval , less than 30 sesonds

SELECT i.itemid, i.key_, i.name, h.host, i.delay, COUNT(hi.clock) AS data_points FROM items i JOIN hosts h ON i.hostid = h.hostid LEFT JOIN history hi ON i.itemid = hi.itemid WHERE i.delay < 30 AND hi.clock BETWEEN UNIX_TIMESTAMP('2024-10-02 12:00:00') AND UNIX_TIMESTAMP('2024-10-02 12:30:00') AND i.status = 0 GROUP BY i.itemid ORDER BY data_points DESC LIMIT 50;

most data points (history entries)

SELECT i.itemid, i.key_, i.name, h.host, COUNT(hi.clock) AS data_points FROM items i JOIN hosts h ON i.hostid = h.hostid LEFT JOIN history hi ON i.itemid = hi.itemid WHERE hi.clock BETWEEN UNIX_TIMESTAMP('2024-10-02 12:00:00') AND UNIX_TIMESTAMP('2024-10-02 12:30:00') AND i.status = 0  GROUP BY i.itemid ORDER BY data_points DESC LIMIT 50;

Item polling multiple times within short period 
SELECT i.itemid, i.key_, i.name, h.host, i.delay, COUNT(hi.clock) AS polls_count FROM items i JOIN hosts h ON i.hostid = h.hostid LEFT JOIN history hi ON i.itemid = hi.itemid WHERE hi.clock BETWEEN UNIX_TIMESTAMP('2024-10-02 12:00:00') AND UNIX_TIMESTAMP('2024-10-02 12:30:00') AND i.status = 0 GROUP BY i.itemid, i.delay HAVING polls_count > (1800 / i.delay)  ORDER BY polls_count DESC LIMIT 50;

working
SELECT i.itemid, i.key_, i.name, h.host, i.delay, COUNT(hi.clock) AS polls_count FROM items i JOIN hosts h ON i.hostid = h.hostid LEFT JOIN history hi ON i.itemid = hi.itemid WHERE hi.clock BETWEEN UNIX_TIMESTAMP('2024-09-28 22:00:00') AND UNIX_TIMESTAMP('2024-09-29 01:00:00') AND i.status = 0 GROUP BY i.itemid, i.delay HAVING polls_count > (1800 / i.delay)  ORDER BY polls_count DESC LIMIT 1000;

	•	i.delay: The polling interval for the item. Items with short intervals (e.g., <30 seconds) are typically more demanding.
	•	polls_count: The number of times an item has been polled within the specified time period.
	•	data_points: The number of history entries created by an item during the time period, which helps identify items causing a load.


SELECT
    FROM_UNIXTIME(clock) AS time,
    value AS delay
FROM history
JOIN items ON items.itemid = history.itemid
WHERE items.key_ = 'zabbix[process,poller,delay]'
AND FROM_UNIXTIME(clock) >= NOW() - INTERVAL 1 DAY
ORDER BY clock DESC;



SELECT
    FROM_UNIXTIME(clock) AS time,
    value AS utilization
FROM history
JOIN items ON items.itemid = history.itemid
WHERE items.key_ = 'zabbix[process,poller,avg,busy]'
AND FROM_UNIXTIME(clock) >= NOW() - INTERVAL 1 DAY
ORDER BY clock DESC;


SELECT
    FROM_UNIXTIME(clock) AS time,
    value AS queue_size
FROM history
JOIN items ON items.itemid = history.itemid
WHERE items.key_ = 'zabbix[queue]'
AND FROM_UNIXTIME(clock) >= NOW() - INTERVAL 1 DAY
ORDER BY clock DESC;


SELECT 
    hosts.host, 
    items.name, 
    items.key_, 
    history.value AS delay, 
    FROM_UNIXTIME(history.clock) AS time
FROM history
JOIN items ON items.itemid = history.itemid
JOIN hosts ON items.hostid = hosts.hostid
WHERE items.key_ = 'zabbix[process,poller,delay]'
AND history.value > 5  -- Customize this threshold based on your environment
ORDER BY history.value DESC
LIMIT 10;


SELECT 
    hosts.host, 
    items.name, 
    items.key_, 
    history.value AS execution_time, 
    FROM_UNIXTIME(history.clock) AS time
FROM history
JOIN items ON items.itemid = history.itemid
JOIN hosts ON items.hostid = hosts.hostid
WHERE items.key_ LIKE 'system.cpu.util%'
AND FROM_UNIXTIME(history.clock) >= NOW() - INTERVAL 1 DAY
ORDER BY history.value DESC
LIMIT 10;



SELECT h.host AS 'Hostname', it.ip AS 'IP Address', MAX(x.value) AS 'Agent Version' FROM items i LEFT JOIN hosts h ON i.hostid = h.hostid LEFT JOIN history_str x ON x.itemid = i.itemid LEFT JOIN interface it ON h.hostid = it.hostid WHERE i.key_ = 'agent.version' AND x.value IS NOT NULL; GROUP BY h.host, it.ip;



SELECT h.host, i.key_, i.delay, i.lastclock, i.lastns
FROM items i
JOIN hosts h ON i.hostid = h.hostid
WHERE i.status = 0
  AND i.lastclock BETWEEN <start_timestamp> AND <end_timestamp>
ORDER BY i.lastns DESC
LIMIT 10;



SELECT h.host, COUNT(hi.itemid) AS history_entries FROM history hi JOIN items i ON hi.itemid = i.itemid JOIN hosts h ON i.hostid = h.hostid WHERE hi.clock BETWEEN UNIX_TIMESTAMP('2024-09-28 22:00:00') AND UNIX_TIMESTAMP('2024-09-29 01:00:00') GROUP BY h.host ORDER BY history_entries DESC LIMIT 10;

SELECT h.host, i.key_, FROM_UNIXTIME(hi.clock) AS last_poll_time FROM items i JOIN hosts h ON i.hostid = h.hostid JOIN history hi ON i.itemid = hi.itemid WHERE i.status = 0 AND hi.clock BETWEEN UNIX_TIMESTAMP('2024-09-28 22:00:00') AND UNIX_TIMESTAMP('2024-09-29 01:00:00') ORDER BY hi.clock DESC LIMIT 10;
